apiVersion: apps/v1
kind: Deployment
metadata:
  name: reservations-service
  labels:
    component: reservations-service
spec:
  replicas: 1
  selector:
    matchLabels:
      component: reservations-service
  template:
    metadata:
      labels:
        component: reservations-service
    spec:
      containers:
        - name: reservations-service
          image: bogdanp3trovic/reservations-service
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: server
          env:
            - name: PG_HOST
              valueFrom:
                secretKeyRef:
                  key: pg_host
                  name: booking-secret
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  key: pg_user
                  name: booking-secret
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: pg_password
                  name: booking-secret
            - name: CONSUL_HOST
              valueFrom:
                secretKeyRef:
                  key: consul_host
                  name: booking-secret
            - name: KAFKA_USERNAME
              valueFrom:
                secretKeyRef:
                  key: kafka_username
                  name: booking-secret
            - name: KAFKA_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: kafka_password
                  name: booking-secret
            - name: CONNECTION_TEST_URL
              valueFrom:
                secretKeyRef:
                  key: connection_test_url
                  name: booking-secret
#          livenessProbe:
#            httpGet:
#              path: /health/live
#              port: server
#            initialDelaySeconds: 180
#            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: server
            initialDelaySeconds: 180
            periodSeconds: 3
---

apiVersion: v1
kind: Service
metadata:
  name: reservations-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    component: reservations-service
  type: ClusterIP


